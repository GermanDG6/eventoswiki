---
import type { MarkdownLayoutProps } from "astro";
import { Container } from "../core/components/atoms/container/container";
import { Tag } from "../core/components/atoms/tag/tag";
import { SocialLink } from "../core/components/molecules/social-link/social-link";
import BaseHead from "../core/components/base-head.astro";
import Footer from "../core/components/organisms/footer/footer.astro";
import Header from "../core/components/organisms/header/header.astro";
import { Calendar } from "../core/components/atoms/icons/calendar";
import { Datetime } from "../core/datetime/datetime";
import { Link } from "../core/components/atoms/icons/link";
import type { Event } from "../core/events/event";
import { MapPin } from "../core/components/atoms/icons/map-pin";
import { AddToCalendarButton } from "../core/components/molecules/add-to-calendar-button/add-to-calendar-button";

type Props = MarkdownLayoutProps<Event>;

const { frontmatter, url } = Astro.props;
const {
  title,
  shortDescription,
  image,
  tags,
  tagColor,
  altImage,
  startDate,
  endDate,
  twitter,
  twitch,
  instagram,
  youtube,
  linkedin,
  github,
  web,
  location,
} = frontmatter;
---

<!DOCTYPE html>
<html lang="en">
  <BaseHead
    title={`${title} - eventos.wiki`}
    description={shortDescription}
    image={image}
    url={`https://eventos.wiki${url}`}
  />
  <body
    class="bg-white dark:bg-slate-800 grid min-h-full m-0 grid-rows-[auto_auto_1fr_auto]"
  >
    <Header />
    <div class="relative h-72 bg-indigo-900">
      <img
        src={image}
        alt={altImage || `Foto de portada del evento ${title}`}
        class="absolute w-full h-full object-cover shadow-md"
      />
      <div class="absolute w-full h-52 bottom-0 bg-gradient-to-t from-black">
      </div>
      <div
        class="absolute w-full bottom-0 px-6 py-4 max-w-5xl left-0 right-0 ml-auto mr-auto xl:px-0"
      >
        <div class="flex items-center gap-2">
          {tags.map((t) => <Tag color={tagColor}>{t}</Tag>)}
        </div>
        <h1 class="text-4xl font-medium text-white">
          {title}
        </h1>
        <div class="flex">
          {
            startDate && (
              <div class="flex items-center gap-1">
                <Calendar color="white" size="1.2rem" />
                <p class="text-sm text-white py-2">
                  {Datetime.toDateTimeString(startDate)}
                </p>
              </div>
            )
          }
          {
            endDate && (
              <div class="flex items-center">
                <p class="text-sm text-white py-2">
                  &nbsp;&centerdot; {Datetime.toDateTimeString(endDate)}
                </p>
              </div>
            )
          }
        </div>
        {
          web && (
            <div class="flex items-center gap-1">
              <Link color="white" size="1.2rem" />
              <a
                href={web}
                target="_blank"
                rel="nofollow"
                class="text-sm text-white"
              >
                {web}
              </a>
            </div>
          )
        }
        {
          location && (
            <div class="flex items-center gap-1">
              <MapPin color="white" size="1.25rem" />
              <p class="text-sm text-white py-2">{location}</p>
            </div>
          )
        }
      </div>
      <div
        class="absolute -bottom-5 px-6 flex justify-end gap-1 max-w-5xl left-0 right-0 ml-auto mr-auto xl:px-0"
      >
        {twitter && <SocialLink href={twitter} type="twitter" />}
        {twitch && <SocialLink href={twitch} type="twitch" />}
        {instagram && <SocialLink href={instagram} type="instagram" />}
        {youtube && <SocialLink href={youtube} type="youtube" />}
        {linkedin && <SocialLink href={linkedin} type="linkedin" />}
        {github && <SocialLink href={github} type="github" />}
      </div>
    </div>
    <main class="mt-4">
      <Container maxSize="m">
        <slot />
      </Container>
      <div class="sticky bottom-2 w-full text-center p-4">
        <AddToCalendarButton
          client:load
          title={title}
          description={shortDescription}
          startDate={Datetime.toDateIsoString(startDate!)}
          endDate={Datetime.toDateIsoString(endDate!)}
          startTime={Datetime.toTimeIsoString(startDate!)}
          endTime={Datetime.toTimeIsoString(endDate!)}
          location={location}
        />
      </div>
    </main>
    <Footer />
    <style>
      :global(html) {
        font-family: system-ui, sans-serif;
        font-size: var(--font-size-base);
        height: 100%;
      }

      :global(p, span) {
        @apply text-gray-900 dark:text-gray-50 text-xl;
      }

      :global(small) {
        @apply text-gray-900 dark:text-gray-50 text-sm;
      }

      :global(h2, h3, h4, h5, h6) {
        @apply font-bold;
      }

      :global(h2) {
        @apply text-slate-900 dark:text-gray-200 text-3xl py-4;
      }

      :global(h3) {
        @apply text-slate-900 dark:text-gray-200 text-2xl py-3;
      }

      :global(p) {
        @apply py-4;
      }

      :global(table) {
        @apply mb-10;
      }

      :global(table tr) {
        @apply border-b dark:border-b-gray-50;
      }

      :global(table td) {
        @apply text-gray-900 dark:text-gray-50 p-4;
      }

      :global(ol, ul) {
        @apply text-base font-sans p-4;
      }

      :global(ol) {
        @apply list-decimal;
      }

      :global(ul) {
        @apply list-disc;
      }

      :global(ul li) {
        @apply text-slate-900 dark:text-gray-200 text-lg mb-2;
      }

      :global(ol li) {
        @apply text-slate-900 dark:text-gray-200 text-lg mb-2;
      }
    </style>
  </body>
</html>
