---
import { Button } from "../../../core/components/atoms/button/Button";
import { Link } from "../../../core/components/atoms/link/Link";
import { EventsGrid } from "../../../core/components/organisms/events-grid/events-grid";
import type { AstroEvent } from "../../../core/events/astro-event";
import { EventUtils } from "../../../core/events/event-utils";
import Layout from "../../../layouts/Layout.astro";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const events = (await Astro.glob("../../eventos/**/*.mdx")) as AstroEvent[];
  const eventsFiltered = EventUtils.getLastEvents(events);
  const eventsSortered = EventUtils.sortByStartDateDesc(eventsFiltered);
  return paginate(eventsSortered, { pageSize: 9 });
}

const { page } = Astro.props;
const nextPage = page.url.next;
const prevPage = page.url.prev;
---

<Layout title="eventos.wiki - Todos los eventos tecnol칩gicos en un mismo lugar">
  <div class="flex items-center justify-between mt-4 mb-10">
    <h2
      class="text-3xl font-extrabold leading-none text-transparent bg-clip-text bg-gradient-to-br from-accent to-primary lg:text-4xl xl:text-5xl sm:mb-3"
    >
      Eventos pasados
    </h2>
    <Link href="/eventos/1" className="text-right">Ver pr칩ximos</Link>
  </div>
  <EventsGrid events={page.data} />
  <div class="flex justify-between mt-8">
    {
      prevPage ? (
        <Button type="link" href={prevPage}>
          P치gina anterior
        </Button>
      ) : (
        <div />
      )
    }
    {
      nextPage && (
        <Button type="link" href={nextPage}>
          Siguiente p치gina
        </Button>
      )
    }
  </div>
</Layout>
